apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    useLibrary 'org.apache.http.legacy'
    dexOptions {
        javaMaxHeapSize "4g"
    }
    compileSdkVersion complie_sdk_version
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId application_id
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        buildFeatures {
            dataBinding {
                enabled = true
                enabledForTests = true
            }
        }

        // Always show the result of every unit test, even if it passes.
        testOptions {
            unitTests {
                includeAndroidResources = true
                returnDefaultValues = true


                all {
                    testLogging {
                        events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                    }
                }
            }
            animationsDisabled = true
        }

        sourceSets {
            String sharedTestDir = 'src/goJeckTest/java'
            test {
                java.srcDir sharedTestDir
            }
            androidTest {
                java.srcDir sharedTestDir
            }
        }
        buildConfigField "String", "BASE_URI", '"https://ghapi.huchen.dev/"'
    }

    buildTypes {
        release {
            zipAlignEnabled true
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/AL2.0'
    }
}


dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'

    //Room
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    //LifeCycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    //Koin
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"

    // Network
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    //OkHttp
    implementation("com.squareup.okhttp3:okhttp:$okhttp3_version") {
        force = true //API 19 support
    }
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.code.gson:gson:2.8.6'

    //Facebook Shimmer
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    //Swipe to Refresh
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"


    //Testing

    //mockito
    testImplementation "androidx.room:room-testing:$room_version"

    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.1"
    androidTestImplementation "androidx.test:core-ktx:1.2.0"
    androidTestImplementation "androidx.test:core:1.2.0"
    androidTestImplementation "androidx.test:rules:1.2.0"
    androidTestImplementation "androidx.test:runner:1.2.0"

    //mockito
//    //todo org.mockito:mockito-android is suggested to use but it's not working. so, dexmaker-mockito is used.
//    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:2.25.1"
//    androidTestImplementation "org.mockito:mockito-core:3.2.4"

    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version"

    //duplicate class deifinition with dexmaker-mockito
    androidTestImplementation "org.koin:koin-test:$koin_version", { exclude group: 'org.mockito' }


    androidTestImplementation 'com.google.truth:truth:1.0.1', { exclude group: 'com.google.guava', module: 'listenablefuture' }
//    androidTestImplementation 'com.google.guava:listenablefuture:1.0'

    //espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.2.0"
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.8.0'
}